grafana:
  defaultDashboardsTimezone: browser # TimeZone 설정 (default: UTC)
  sidecar:
    datasources:
      url: http://thanos-query-frontend.monitoring.svc.cluster.local:9090/
  ingress:
    ingressClassName: nginx
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      external-dns.alpha.kubernetes.io/target: 121.130.214.237
    hosts:
    - grafana.kkamji.net
    paths:
    - /
    tls:
    - secretName: grafana-tls
      hosts:
      - grafana.kkamji.net

prometheus:
  thanosService:
    # Thanos Sidecar용 Service 생성
    enabled: true
  prometheusSpec:
    retention: 2d
    thanos:
      objectStorageConfig:
        existingSecret: 
          name: "thanos-objstore"
          key: "objstore.yml"
  ingress:
    ingressClassName: nginx
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/auth-type: "basic" # 인증 타입
      nginx.ingress.kubernetes.io/auth-secret: "prometheus-basic-auth" # 인증에 사용할 secret
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required" # 인증 프롬프트에 보내는 메시지
      external-dns.alpha.kubernetes.io/target: 121.130.214.237
    hosts:
    - prometheus.kkamji.net
    paths:
    - /
    tls:
    - secretName: prometheus-tls
      hosts:
      - prometheus.kkamji.net

# prometheusOperator:
#   admissionWebhooks:
#     patch:
#       enabled: false
